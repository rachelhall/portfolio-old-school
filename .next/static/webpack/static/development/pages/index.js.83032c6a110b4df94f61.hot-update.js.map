{"version":3,"file":"static/webpack/static/development/pages/index.js.83032c6a110b4df94f61.hot-update.js","sources":["webpack:///./components/reusableWindow/index.js","webpack:///./components/singleIcon/index.js"],"sourcesContent":["import { Fragment, useRef, useContext } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Resizable, ResizableBox } from \"react-resizable\";\n\nimport \"./styles.scss\";\n\n// import windowData from \"../../data\"\nimport { IdCTX } from \"../../components/singleIcon\";\n\nconst ReusableWindow = ({\n  closeWindow,\n  title,\n  bodyContent,\n  windowOpen,\n  background,\n  header,\n  zIndex\n}) => {\n  const ctx = useContext(idCTX);\n  const windowRef = useRef(null);\n  // const [windowOpen, setWindowOpen] = useState(false\n  //   `${windowData[0].title}open`\n  //   );\n\n  \n\n  return (\n    <div className=\"margin-container\" ref={windowRef} style={{zIndex: `${zIndex}`}}>\n      {windowOpen.includes(ctx.id) \n      // === `${title}open` \n      ? (\n        <motion.div\n          initial={{ scale: 0 }}\n          animate={{ scale: 1 }}\n          transition={{ duration: 0.25 }}\n          className={background ? `window ${background}-background` : `window`}\n        >\n          {header ? (\n            <Fragment>\n              <header>\n                <p className=\"close-button\" onClick={closeWindow}>\n                  &#10006;\n                </p>\n                <p>{title}</p>\n              </header>\n              <div className=\"body-content\">{bodyContent.component}</div>\n            </Fragment>\n          ) : (\n            <div className=\"body-content\">{bodyContent.component}</div>\n          )}\n        </motion.div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nexport default ReusableWindow;\n","import { Fragment, useContext, createContext } from \"react\";\nimport { WindowCTX } from \"../../pages/home\";\nimport \"./styles.scss\";\n\nexport const IdCTX = createContext({});\n\nconst SingleIcon = ({ title, iconUrl, setZIndex, zIndex, id }) => {\n  const ctx = useContext(WindowCTX);\n  const handleClickWindow = () => {\n    // ctx.setWindowOpen(true);\n    console.log(\"icon was clicked\");\n    ctx.windowOpen.push(id);\n    ctx.setWindowOpen(ctx.windowOpen);\n    setZIndex(zIndex + 5);\n  };\n  return (\n    <Fragment>\n      <IdCTX.provider\n      value={{ id: id }}>\n        <div className=\"single-icon\" onClick={handleClickWindow}>\n          <img src={iconUrl} alt={title} />\n          <p className=\"icon-title\">{title}</p>\n        </div>\n      </IdCTX.provider>\n    </Fragment>\n  );\n};\n\nexport default SingleIcon;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}