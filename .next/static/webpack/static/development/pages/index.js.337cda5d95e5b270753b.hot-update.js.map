{"version":3,"file":"static/webpack/static/development/pages/index.js.337cda5d95e5b270753b.hot-update.js","sources":["webpack:///./components/movieModal/index.js","webpack:///./components/movies/index.js"],"sourcesContent":["const MovieModal = () => {\n    return (\n        <div className=\"videoplayer-container modal\">\n          <div class=\"modal-header\">\n            <span class=\"close-btn\" onClick={toggleModalOpen}>\n              &times;\n            </span>\n          </div>\n          <div class=\"plyr__video-embed modal-content\" id=\"player\">\n            <iframe\n              src={videoId}\n              allowfullscreen\n              allowtransparency\n              allow=\"autoplay\"\n            ></iframe>\n          </div>\n        </div>\n    )\n};\n\nexport default MovieModal;","import { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport plyr from \"plyr\";\n\n// components\nimport MovieModal from \"../../components/movieModal\";\n\n// styles\nimport \"./styles.module.scss\";\n\n// data\nimport { movies } from \"../../data\";\n\nconst Movies = () => {\n  const [videoId, setVideoId] = useState(movies[0].url);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const openVideoModal = () => {\n    setVideoId(item.url);\n  };\n\n  const toggleModalOpen = () => {\n    setModalOpen(!modalOpen);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"single-item\">\n        <ul className=\"singleItem-list\">\n          {movies.map((item, i) => {\n            return (\n              <Fragment>\n                <li\n                  className=\"singleItem-link\"\n                  onClick={toggleModalOpen}\n                  key={i}\n                >\n                  <p>{item.name}</p>\n                </li>\n                {modalOpen ? <MovieModal /> : <div></div>}\n              </Fragment>\n            );\n          })}\n        </ul>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Movies;\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAKA;AACA;AACA;;;;A","sourceRoot":""}