{"version":3,"file":"static/webpack/static/development/pages/index.js.f2cae2182e7d588872a2.hot-update.js","sources":["webpack:///./pages/home/index.js"],"sourcesContent":["import { useState, useRef, Fragment, useEffect, createContext } from \"react\";\nimport { motion } from \"framer-motion\";\n\n// styles\nimport \"../home/styles.scss\";\n\n//componenets\nimport Icons from \"../../components/icons\";\nimport Nav from \"../../components/nav\";\nimport ReusableWindow from \"../../components/reusableWindow\";\n\n// data\nimport windowData from \"../../data.js\";\n\nexport const WindowCTX = createContext({});\n\nconst Home = () => {\n  const constraintsRef = useRef(null);\n  const iconConstraints = useRef(null);\n\n  const [canDrag, setCanDrag] = useState(false);\n\n  const [zIndex, setZIndex] = useState(5);\n\n  useEffect(() => {\n    const mediaMatch = window.matchMedia(\"(min-width: 500px)\");\n    setCanDrag(mediaMatch.matches);\n  }, []);\n\n  const [wallpaper, setWallpaper] = useState(\"blue\");\n\n  const changeWallpaper = newWallpaper => {\n    setWallpaper(newWallpaper);\n  };\n\n  const [windowOpen, setWindowOpen] = useState(`\n  ${windowData[0].title}open`\n  );\n\n  const closeWindow = () => {\n    setWindowOpen(null);\n  };\n\n  return (\n    <Fragment>\n      <WindowCTX.Provider\n        value={{ changeWallpaper: changeWallpaper, setWindowOpen: setWindowOpen }}\n\n      >\n        <motion.div\n          ref={constraintsRef}\n          className={\n            wallpaper === \"stars\"\n              ? \"entire-display stars\"\n              : wallpaper === \"green\"\n              ? \"entire-display green\"\n              : wallpaper === \"gray\"\n              ? \"entire-display gray\"\n              : \"entire-display\"\n          }\n        >\n          <Nav />\n\n          {/* {canDrag ? (\n          <motion.div\n          drag\n          dragMomentum={false}\n          dragConstraints={{\n            left: -300,\n            top: -50,\n            bottom: 500,\n            right: 300\n          }}\n          >\n          <Window />\n          </motion.div>\n          ) : (\n            <Window />\n          )} */}\n\n          {windowData.map((window, i) => {\n            return (\n              <motion.div\n                drag\n                dragMomentum={false}\n                dragConstraints={{\n                  left: -300,\n                  top: -50,\n                  bottom: 500,\n                  right: 300\n                }}\n                className=\"window-container\"\n                key={`${i}2`}\n              >\n                <ReusableWindow\n                  title={window.title}\n                  header={window.header}\n                  bodyContent={window.bodyContent}\n                  background={window.background}\n                  windowOpen={windowOpen}\n                  closeWindow={closeWindow}\n                  changeWallpaper={changeWallpaper}\n                  key={`${i}23`}\n                  zIndex={zIndex}\n                />\n              </motion.div>\n            );\n          })}\n\n          <motion.div className=\"icons-container\" ref={iconConstraints}>\n            <Icons\n              // setWindowOpen={setWindowOpen}\n              // windowOpen={windowOpen}\n              zIndex={zIndex}\n              setZIndex={setZIndex}\n            />\n          </motion.div>\n        </motion.div>\n      </WindowCTX.Provider>\n    </Fragment>\n  );\n};\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AAlBA;AAAA;AAAA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAFA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}