{"ast":null,"code":"import { useEffect, useState } from 'react';\nconst {\n  0: canDrag,\n  1: setCanDrag\n} = useState(true);\n\nfunction updateDrag() {\n  useEffect(() => {\n    setCanDrag(useMediaQuery(\"(max-width: 600px)\"));\n  });\n}\n\nexport const useMediaQuery = ({\n  query\n}) => {\n  const mediaMatch = window.matchMedia(query);\n  const {\n    0: matches,\n    1: setMatches\n  } = useState(mediaMatch.matches);\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  });\n  return matches;\n};","map":{"version":3,"sources":["/Users/thomasharbin/Documents/GitHub/portfolio-old-school/utils/useMediaQuery.js"],"names":["useEffect","useState","canDrag","setCanDrag","updateDrag","useMediaQuery","query","mediaMatch","window","matchMedia","matches","setMatches","handler","e","addListener","removeListener"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAIA,MAAM;AAAA,KAACC,OAAD;AAAA,KAAUC;AAAV,IAAwBF,QAAQ,CAAC,IAAD,CAAtC;;AAEE,SAASG,UAAT,GAAsB;AACpBJ,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,UAAU,CAACE,aAAa,CAAC,oBAAD,CAAd,CAAV;AACD,GAFQ,CAAT;AAGD;;AAEH,OAAO,MAAMA,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACxC,QAAMC,UAAU,GAAGC,MAAM,CAACC,UAAP,CAAkBH,KAAlB,CAAnB;AACA,QAAM;AAAA,OAACI,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAACM,UAAU,CAACG,OAAZ,CAAtC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,OAAO,GAAGC,CAAC,IAAIF,UAAU,CAACE,CAAC,CAACH,OAAH,CAA/B;;AACAH,IAAAA,UAAU,CAACO,WAAX,CAAuBF,OAAvB;AACA,WAAO,MAAML,UAAU,CAACQ,cAAX,CAA0BH,OAA1B,CAAb;AACD,GAJQ,CAAT;AAKA,SAAOF,OAAP;AACD,CAVM","sourcesContent":["import {useEffect, useState} from 'react';\n  \n\n\nconst [canDrag, setCanDrag] = useState(true);\n\n  function updateDrag() {\n    useEffect(() => {\n      setCanDrag(useMediaQuery(\"(max-width: 600px)\"));\n    });\n  }\n  \nexport const useMediaQuery = ({query}) => {\n  const mediaMatch = window.matchMedia(query);\n  const [matches, setMatches] = useState(mediaMatch.matches);\n\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  });\n  return matches;\n};"]},"metadata":{},"sourceType":"module"}