{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport dynamic from \"next/dynamic\";\nconst DynamicComponentWithNoSSR = dynamic(() => import('../components/List'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../components/List')],\n    modules: ['../components/List']\n  }\n});\nexport const useMediaQuery = query => {\n  const mediaMatch = window.matchMedia(query);\n  const {\n    0: matches,\n    1: setMatches\n  } = useState(mediaMatch.matches);\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  });\n  return matches;\n};","map":{"version":3,"sources":["/Users/thomasharbin/Documents/GitHub/portfolio-old-school/utils/useMediaQuery.js"],"names":["useEffect","useState","dynamic","DynamicComponentWithNoSSR","ssr","useMediaQuery","query","mediaMatch","window","matchMedia","matches","setMatches","handler","e","addListener","removeListener"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,MAAMC,yBAAyB,GAAGD,OAAO,CAAC,MAAM,OAAO,oBAAP,CAAP,EAAqC;AAC1EE,EAAAA,GAAG,EAAE,KADqE;AAAA;AAAA,wCAAvB,oBAAuB;AAAA,cAAvB,oBAAuB;AAAA;AAAA,CAArC,CAAzC;AAKA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AACtC,QAAMC,UAAU,GAAGC,MAAM,CAACC,UAAP,CAAkBH,KAAlB,CAAnB;AACA,QAAM;AAAA,OAACI,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAACM,UAAU,CAACG,OAAZ,CAAtC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,OAAO,GAAGC,CAAC,IAAIF,UAAU,CAACE,CAAC,CAACH,OAAH,CAA/B;;AACAH,IAAAA,UAAU,CAACO,WAAX,CAAuBF,OAAvB;AACA,WAAO,MAAML,UAAU,CAACQ,cAAX,CAA0BH,OAA1B,CAAb;AACD,GAJQ,CAAT;AAKA,SAAOF,OAAP;AACD,CAVM","sourcesContent":["import {useEffect, useState} from 'react';\nimport dynamic from \"next/dynamic\"\n\nconst DynamicComponentWithNoSSR = dynamic(() => import('../components/List'), {\n    ssr: false\n  })\n\n  \nexport const useMediaQuery = (query) => {\n  const mediaMatch = window.matchMedia(query);\n  const [matches, setMatches] = useState(mediaMatch.matches);\n\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  });\n  return matches;\n};"]},"metadata":{},"sourceType":"module"}