{"ast":null,"code":"import { useEffect, useState } from 'react';\n\nvar _useState = useState(true),\n    canDrag = _useState[0],\n    setCanDrag = _useState[1];\n\nfunction updateDrag() {\n  useEffect(function () {\n    setCanDrag(useMediaQuery(\"(max-width: 600px)\"));\n  });\n}\n\nexport var useMediaQuery = function useMediaQuery(_ref) {\n  var query = _ref.query;\n  var mediaMatch = window.matchMedia(query);\n\n  var _useState2 = useState(mediaMatch.matches),\n      matches = _useState2[0],\n      setMatches = _useState2[1];\n\n  useEffect(function () {\n    var handler = function handler(e) {\n      return setMatches(e.matches);\n    };\n\n    mediaMatch.addListener(handler);\n    return function () {\n      return mediaMatch.removeListener(handler);\n    };\n  });\n  return matches;\n};","map":{"version":3,"sources":["/Users/thomasharbin/Documents/GitHub/portfolio-old-school/utils/useMediaQuery.js"],"names":["useEffect","useState","canDrag","setCanDrag","updateDrag","useMediaQuery","query","mediaMatch","window","matchMedia","matches","setMatches","handler","e","addListener","removeListener"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;gBAI8BA,QAAQ,CAAC,IAAD,C;IAA/BC,O;IAASC,U;;AAEd,SAASC,UAAT,GAAsB;AACpBJ,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,UAAU,CAACE,aAAa,CAAC,oBAAD,CAAd,CAAV;AACD,GAFQ,CAAT;AAGD;;AAEH,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACxC,MAAMC,UAAU,GAAGC,MAAM,CAACC,UAAP,CAAkBH,KAAlB,CAAnB;;AADwC,mBAEVL,QAAQ,CAACM,UAAU,CAACG,OAAZ,CAFE;AAAA,MAEjCA,OAFiC;AAAA,MAExBC,UAFwB;;AAIxCX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMY,OAAO,GAAG,SAAVA,OAAU,CAAAC,CAAC;AAAA,aAAIF,UAAU,CAACE,CAAC,CAACH,OAAH,CAAd;AAAA,KAAjB;;AACAH,IAAAA,UAAU,CAACO,WAAX,CAAuBF,OAAvB;AACA,WAAO;AAAA,aAAML,UAAU,CAACQ,cAAX,CAA0BH,OAA1B,CAAN;AAAA,KAAP;AACD,GAJQ,CAAT;AAKA,SAAOF,OAAP;AACD,CAVM","sourcesContent":["import {useEffect, useState} from 'react';\n  \n\n\nconst [canDrag, setCanDrag] = useState(true);\n\n  function updateDrag() {\n    useEffect(() => {\n      setCanDrag(useMediaQuery(\"(max-width: 600px)\"));\n    });\n  }\n  \nexport const useMediaQuery = ({query}) => {\n  const mediaMatch = window.matchMedia(query);\n  const [matches, setMatches] = useState(mediaMatch.matches);\n\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  });\n  return matches;\n};"]},"metadata":{},"sourceType":"module"}