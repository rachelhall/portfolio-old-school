{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nexport var useMediaQuery = function useMediaQuery(_ref) {\n  var query = _ref.query;\n\n  var _undefined = _slicedToArray(undefined, 2),\n      mediaMatch = _undefined[0],\n      setMediaMatch = _undefined[1]; // const mediaMatch = window.matchMedia(query);\n\n\n  var _useState = useState(mediaMatch.matches),\n      matches = _useState[0],\n      setMatches = _useState[1];\n\n  useEffect(function () {\n    setMediaMatch(window.matchMedia(query));\n  }, []);\n  useEffect(function () {\n    var handler = function handler(e) {\n      return setMatches(e.matches);\n    };\n\n    mediaMatch.addListener(handler);\n    return function () {\n      return mediaMatch.removeListener(handler);\n    };\n  });\n  return matches;\n};","map":{"version":3,"sources":["/Users/thomasharbin/Documents/GitHub/portfolio-old-school/utils/useMediaQuery.js"],"names":["useEffect","useState","useMediaQuery","query","undefined","mediaMatch","setMediaMatch","matches","setMatches","window","matchMedia","handler","e","addListener","removeListener"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kCACNC,SADM;AAAA,MACnCC,UADmC;AAAA,MACvBC,aADuB,kBAE1C;;;AAF0C,kBAGZL,QAAQ,CAACI,UAAU,CAACE,OAAZ,CAHI;AAAA,MAGnCA,OAHmC;AAAA,MAG1BC,UAH0B;;AAK1CR,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,aAAa,CAACG,MAAM,CAACC,UAAP,CAAkBP,KAAlB,CAAD,CAAb;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,OAAO,GAAG,SAAVA,OAAU,CAAAC,CAAC;AAAA,aAAIJ,UAAU,CAACI,CAAC,CAACL,OAAH,CAAd;AAAA,KAAjB;;AACAF,IAAAA,UAAU,CAACQ,WAAX,CAAuBF,OAAvB;AACA,WAAO;AAAA,aAAMN,UAAU,CAACS,cAAX,CAA0BH,OAA1B,CAAN;AAAA,KAAP;AACD,GAJQ,CAAT;AAKA,SAAOJ,OAAP;AACD,CAfM","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport const useMediaQuery = ({ query }) => {\n  const [mediaMatch, setMediaMatch] = undefined;\n  // const mediaMatch = window.matchMedia(query);\n  const [matches, setMatches] = useState(mediaMatch.matches);\n\n  useEffect(() => {\n    setMediaMatch(window.matchMedia(query));\n  }, []);\n\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  });\n  return matches;\n};\n"]},"metadata":{},"sourceType":"module"}