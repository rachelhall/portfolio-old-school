{"ast":null,"code":"import { useEffect, useState } from \"react\";\nexport const useMediaQuery = ({\n  query\n}) => {\n  const {\n    0: mediaMatch,\n    1: setMediaMatch\n  } = useState(false); // const mediaMatch = window.matchMedia(query);\n\n  const {\n    0: matches,\n    1: setMatches\n  } = useState(mediaMatch.matches);\n  useEffect(() => {\n    setMediaMatch(window.matchMedia(query));\n  }, []);\n  useEffect(() => {\n    if (mediaMatch) {\n      const handler = e => setMatches(e.matches);\n\n      mediaMatch.addListener(handler);\n      return () => mediaMatch.removeListener(handler);\n    }\n  }, [mediaMatch]);\n  return matches;\n};","map":{"version":3,"sources":["/Users/thomasharbin/Documents/GitHub/portfolio-old-school/utils/useMediaQuery.js"],"names":["useEffect","useState","useMediaQuery","query","mediaMatch","setMediaMatch","matches","setMatches","window","matchMedia","handler","e","addListener","removeListener"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1C,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BJ,QAAQ,CAAC,KAAD,CAA5C,CAD0C,CAE1C;;AACA,QAAM;AAAA,OAACK,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAACG,UAAU,CAACE,OAAZ,CAAtC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,aAAa,CAACG,MAAM,CAACC,UAAP,CAAkBN,KAAlB,CAAD,CAAb;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,UAAJ,EAAgB;AACd,YAAMM,OAAO,GAAGC,CAAC,IAAIJ,UAAU,CAACI,CAAC,CAACL,OAAH,CAA/B;;AACAF,MAAAA,UAAU,CAACQ,WAAX,CAAuBF,OAAvB;AACA,aAAO,MAAMN,UAAU,CAACS,cAAX,CAA0BH,OAA1B,CAAb;AACD;AACF,GANQ,EAMN,CAACN,UAAD,CANM,CAAT;AAOA,SAAOE,OAAP;AACD,CAjBM","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport const useMediaQuery = ({ query }) => {\n  const [mediaMatch, setMediaMatch] = useState(false);\n  // const mediaMatch = window.matchMedia(query);\n  const [matches, setMatches] = useState(mediaMatch.matches);\n\n  useEffect(() => {\n    setMediaMatch(window.matchMedia(query));\n  }, []);\n\n  useEffect(() => {\n    if (mediaMatch) {\n      const handler = e => setMatches(e.matches);\n      mediaMatch.addListener(handler);\n      return () => mediaMatch.removeListener(handler);\n    }\n  }, [mediaMatch]);\n  return matches;\n};\n"]},"metadata":{},"sourceType":"module"}