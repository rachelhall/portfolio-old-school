{"ast":null,"code":"var _jsxFileName = \"/Users/thomasharbin/Documents/GitHub/portfolio-old-school/pages/home/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, Fragment, useEffect, createContext } from \"react\";\nimport { motion } from \"framer-motion\"; // styles\n\nimport \"../home/styles.scss\"; //componenets\n\nimport Icons from \"../../components/icons\";\nimport Nav from \"../../components/nav\";\nimport ReusableWindow from \"../../components/reusableWindow\"; // data\n\nimport windowData from \"../../data.js\";\nexport var WindowCTX = createContext({});\n\nvar Home = function Home() {\n  var constraintsRef = useRef(null);\n  var iconConstraints = useRef(null);\n\n  var _useState = useState(false),\n      canDrag = _useState[0],\n      setCanDrag = _useState[1];\n\n  var _useState2 = useState(5),\n      zIndex = _useState2[0],\n      setZIndex = _useState2[1];\n\n  useEffect(function () {\n    var mediaMatch = window.matchMedia(\"(min-width: 500px)\");\n    setCanDrag(mediaMatch.matches);\n  }, []);\n\n  var _useState3 = useState(\"blue\"),\n      wallpaper = _useState3[0],\n      setWallpaper = _useState3[1];\n\n  var changeWallpaper = function changeWallpaper(newWallpaper) {\n    setWallpaper(newWallpaper);\n  };\n\n  var _useState4 = useState(false // `${windowData[0].title}open`\n  ),\n      windowOpen = _useState4[0],\n      setWindowOpen = _useState4[1];\n\n  var closeWindow = function closeWindow() {\n    setWindowOpen(null);\n  };\n\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(WindowCTX.Provider, {\n    value: {\n      changeWallpaper: changeWallpaper,\n      setWindowOpen: setWindowOpen\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(motion.div, {\n    ref: constraintsRef,\n    className: wallpaper === \"stars\" ? \"entire-display stars\" : wallpaper === \"green\" ? \"entire-display green\" : wallpaper === \"gray\" ? \"entire-display gray\" : \"entire-display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), windowData.map(function (window, i) {\n    return __jsx(motion.div, {\n      drag: true,\n      dragMomentum: false,\n      dragConstraints: {\n        left: -300,\n        top: -50,\n        bottom: 500,\n        right: 300\n      },\n      className: \"window-container\",\n      key: \"\".concat(i, \"2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(ReusableWindow, {\n      title: window.title,\n      header: window.header,\n      bodyContent: window.bodyContent,\n      background: window.background,\n      windowOpen: windowOpen,\n      closeWindow: closeWindow,\n      changeWallpaper: changeWallpaper,\n      key: \"\".concat(i, \"23\"),\n      zIndex: zIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }), __jsx(motion.div, {\n    className: \"icons-container\",\n    ref: iconConstraints,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(Icons // setWindowOpen={setWindowOpen}\n  // windowOpen={windowOpen}\n  , {\n    zIndex: zIndex,\n    setZIndex: setZIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/thomasharbin/Documents/GitHub/portfolio-old-school/pages/home/index.js"],"names":["useState","useRef","Fragment","useEffect","createContext","motion","Icons","Nav","ReusableWindow","windowData","WindowCTX","Home","constraintsRef","iconConstraints","canDrag","setCanDrag","zIndex","setZIndex","mediaMatch","window","matchMedia","matches","wallpaper","setWallpaper","changeWallpaper","newWallpaper","windowOpen","setWindowOpen","closeWindow","map","i","left","top","bottom","right","title","header","bodyContent","background"],"mappings":"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","sourcesContent":["import { useState, useRef, Fragment, useEffect, createContext } from \"react\";\nimport { motion } from \"framer-motion\";\n\n// styles\nimport \"../home/styles.scss\";\n\n//componenets\nimport Icons from \"../../components/icons\";\nimport Nav from \"../../components/nav\";\nimport ReusableWindow from \"../../components/reusableWindow\";\n\n// data\nimport windowData from \"../../data.js\";\n\nexport const WindowCTX = createContext({});\n\nconst Home = () => {\n  const constraintsRef = useRef(null);\n  const iconConstraints = useRef(null);\n\n  const [canDrag, setCanDrag] = useState(false);\n\n  const [zIndex, setZIndex] = useState(5);\n\n  useEffect(() => {\n    const mediaMatch = window.matchMedia(\"(min-width: 500px)\");\n    setCanDrag(mediaMatch.matches);\n  }, []);\n\n  const [wallpaper, setWallpaper] = useState(\"blue\");\n\n  const changeWallpaper = newWallpaper => {\n    setWallpaper(newWallpaper);\n  };\n\n  const [windowOpen, setWindowOpen] = useState(false\n    // `${windowData[0].title}open`\n  );\n\n  const closeWindow = () => {\n    setWindowOpen(null);\n  };\n\n  return (\n    <Fragment>\n      <WindowCTX.Provider\n        value={{ changeWallpaper: changeWallpaper, setWindowOpen: setWindowOpen }}\n\n      >\n        <motion.div\n          ref={constraintsRef}\n          className={\n            wallpaper === \"stars\"\n              ? \"entire-display stars\"\n              : wallpaper === \"green\"\n              ? \"entire-display green\"\n              : wallpaper === \"gray\"\n              ? \"entire-display gray\"\n              : \"entire-display\"\n          }\n        >\n          <Nav />\n\n          {/* {canDrag ? (\n          <motion.div\n          drag\n          dragMomentum={false}\n          dragConstraints={{\n            left: -300,\n            top: -50,\n            bottom: 500,\n            right: 300\n          }}\n          >\n          <Window />\n          </motion.div>\n          ) : (\n            <Window />\n          )} */}\n\n          {windowData.map((window, i) => {\n            return (\n              <motion.div\n                drag\n                dragMomentum={false}\n                dragConstraints={{\n                  left: -300,\n                  top: -50,\n                  bottom: 500,\n                  right: 300\n                }}\n                className=\"window-container\"\n                key={`${i}2`}\n              >\n                <ReusableWindow\n                  title={window.title}\n                  header={window.header}\n                  bodyContent={window.bodyContent}\n                  background={window.background}\n                  windowOpen={windowOpen}\n                  closeWindow={closeWindow}\n                  changeWallpaper={changeWallpaper}\n                  key={`${i}23`}\n                  zIndex={zIndex}\n                />\n              </motion.div>\n            );\n          })}\n\n          <motion.div className=\"icons-container\" ref={iconConstraints}>\n            <Icons\n              // setWindowOpen={setWindowOpen}\n              // windowOpen={windowOpen}\n              zIndex={zIndex}\n              setZIndex={setZIndex}\n            />\n          </motion.div>\n        </motion.div>\n      </WindowCTX.Provider>\n    </Fragment>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}