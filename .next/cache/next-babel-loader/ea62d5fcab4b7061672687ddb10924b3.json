{"ast":null,"code":"var _jsxFileName = \"/Users/thomasharbin/Documents/GitHub/portfolio-old-school/pages/home/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { motion } from \"framer-motion\";\nimport \"../home/styles.scss\";\nimport { useState, useRef, Fragment, useEffect } from \"react\";\nimport dynamic from \"next/dynamic\"; // utils\n\nimport { useMediaQuery } from \"../../utils/useMediaQuery\"; //componenets\n\nimport Window from \"../../components/window\";\nimport Icons from \"../../components/Icons\";\nimport PreferencesWindow from \"../../components/PreferencesWindow\";\nimport WebsitesWindow from \"../../components/websitesWindow\";\nimport Nav from \"../../components/nav\";\nimport ReusableWindow from \"../../components/reusableWindow\";\nimport SingleSite from \"../../components/singleSite\";\n\nvar Home = function Home() {\n  var constraintsRef = useRef(null);\n  var iconConstraints = useRef(null);\n\n  var _useState = useState(false),\n      canDrag = _useState[0],\n      setCanDrag = _useState[1];\n\n  useEffect(function () {\n    var mediaMatch = window.matchMedia(\"(min-width: 500px)\");\n    setCanDrag(mediaMatch.matches);\n  }, []);\n\n  var _useState2 = useState(\"green\"),\n      wallpaper = _useState2[0],\n      setWallpaper = _useState2[1];\n\n  var _useState3 = useState(false),\n      preferencesOpen = _useState3[0],\n      togglePreferencesOpen = _useState3[1];\n\n  var _useState4 = useState(false),\n      websitesOpen = _useState4[0],\n      toggleWebsitesOpen = _useState4[1]; // const title = \"info\";\n\n\n  var _useState5 = useState(\"\".concat(windowData.title, \"open\")),\n      windowOpen = _useState5[0],\n      toggleWindowOpen = _useState5[1];\n\n  var handleClickPreferences = function handleClickPreferences() {\n    togglePreferencesOpen(!preferencesOpen);\n  };\n\n  var handleClickWebsites = function handleClickWebsites() {\n    toggleWebsitesOpen(!websitesOpen);\n  };\n\n  var handleClickWindow = function handleClickWindow() {\n    toggleWindowOpen(!windowOpen);\n  };\n\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(motion.div, {\n    ref: constraintsRef,\n    className: wallpaper === \"stars\" ? \"entire-display stars\" : wallpaper === \"blue\" ? \"entire-display blue\" : \"entire-display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), __jsx(PreferencesWindow, {\n    preferencesOpen: preferencesOpen,\n    handleClick: handleClickPreferences,\n    setWallpaper: setWallpaper,\n    wallpaper: wallpaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), __jsx(WebsitesWindow, {\n    websitesOpen: websitesOpen,\n    handleClick: handleClickWebsites,\n    title: windowData[0].title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), windowData.map(function (window) {\n    return __jsx(ReusableWindow, {\n      title: window.title,\n      bodyContent: __jsx(SingleSite, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }),\n      toggleWindowOpen: toggleWindowOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    });\n  }), __jsx(motion.div, {\n    className: \"icons-container\",\n    ref: iconConstraints,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(Icons, {\n    togglePreferencesOpen: togglePreferencesOpen,\n    preferencesOpen: preferencesOpen,\n    toggleWebsitesOpen: toggleWebsitesOpen,\n    websitesOpen: websitesOpen,\n    toggleWindowOpen: toggleWindowOpen,\n    windowOpen: windowOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/thomasharbin/Documents/GitHub/portfolio-old-school/pages/home/index.js"],"names":["motion","useState","useRef","Fragment","useEffect","dynamic","useMediaQuery","Window","Icons","PreferencesWindow","WebsitesWindow","Nav","ReusableWindow","SingleSite","Home","constraintsRef","iconConstraints","canDrag","setCanDrag","mediaMatch","window","matchMedia","matches","wallpaper","setWallpaper","preferencesOpen","togglePreferencesOpen","websitesOpen","toggleWebsitesOpen","windowData","title","windowOpen","toggleWindowOpen","handleClickPreferences","handleClickWebsites","handleClickWindow","map"],"mappings":"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","sourcesContent":["import { motion } from \"framer-motion\";\nimport \"../home/styles.scss\";\nimport { useState, useRef, Fragment, useEffect } from \"react\";\nimport dynamic from \"next/dynamic\";\n\n// utils\nimport { useMediaQuery } from \"../../utils/useMediaQuery\";\n\n//componenets\nimport Window from \"../../components/window\";\nimport Icons from \"../../components/Icons\";\nimport PreferencesWindow from \"../../components/PreferencesWindow\";\nimport WebsitesWindow from \"../../components/websitesWindow\";\nimport Nav from \"../../components/nav\";\nimport ReusableWindow from \"../../components/reusableWindow\";\nimport SingleSite from \"../../components/singleSite\";\n\nconst Home = () => {\n  const constraintsRef = useRef(null);\n  const iconConstraints = useRef(null);\n\n  const [canDrag, setCanDrag] = useState(false);\n\n  useEffect(() => {\n    const mediaMatch = window.matchMedia(\"(min-width: 500px)\");\n    setCanDrag(mediaMatch.matches);\n  }, []);\n\n  const [wallpaper, setWallpaper] = useState(\"green\");\n  const [preferencesOpen, togglePreferencesOpen] = useState(false);\n  const [websitesOpen, toggleWebsitesOpen] = useState(false);\n\n  // const title = \"info\";\n\n  const [windowOpen, toggleWindowOpen] = useState(`${windowData.title}open`);\n\n  const handleClickPreferences = () => {\n    togglePreferencesOpen(!preferencesOpen);\n  };\n\n  const handleClickWebsites = () => {\n    toggleWebsitesOpen(!websitesOpen);\n  };\n\n  const handleClickWindow = () => {\n    toggleWindowOpen(!windowOpen);\n  };\n\n  \n\n  return (\n    <Fragment>\n      <motion.div\n        ref={constraintsRef}\n        className={\n          wallpaper === \"stars\"\n            ? \"entire-display stars\"\n            : wallpaper === \"blue\"\n            ? \"entire-display blue\"\n            : \"entire-display\"\n        }\n      >\n        <Nav />\n\n        {/* {canDrag ? (\n          <motion.div\n            drag\n            dragMomentum={false}\n            dragConstraints={{\n              left: -300,\n              top: -50,\n              bottom: 500,\n              right: 300\n            }}\n          >\n            <Window />\n          </motion.div>\n        ) : (\n          <Window />\n        )} */}\n\n        <PreferencesWindow\n          preferencesOpen={preferencesOpen}\n          handleClick={handleClickPreferences}\n          setWallpaper={setWallpaper}\n          wallpaper={wallpaper}\n        />\n\n        <WebsitesWindow\n          websitesOpen={websitesOpen}\n          handleClick={handleClickWebsites}\n          title={windowData[0].title}\n        />\n\n        {windowData.map(window => {\n          return (\n            <ReusableWindow\n              title={window.title}\n              bodyContent={<SingleSite />}\n              toggleWindowOpen={toggleWindowOpen}\n            />\n          );\n        })}\n\n        {/* <ReusableWindow\n          title={windowData[0].title}\n          bodyContent={<SingleSite />}\n          toggleWindowOpen={toggleWindowOpen}\n        /> */}\n        <motion.div className=\"icons-container\" ref={iconConstraints}>\n          <Icons\n            togglePreferencesOpen={togglePreferencesOpen}\n            preferencesOpen={preferencesOpen}\n            toggleWebsitesOpen={toggleWebsitesOpen}\n            websitesOpen={websitesOpen}\n            toggleWindowOpen={toggleWindowOpen}\n            windowOpen={windowOpen}\n          />\n        </motion.div>\n      </motion.div>\n    </Fragment>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}