{"ast":null,"code":"var _jsxFileName = \"/Users/thomasharbin/Documents/GitHub/portfolio-old-school/pages/home/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { motion } from \"framer-motion\";\nimport \"../home/styles.scss\";\nimport { useState, useRef, Fragment, useEffect } from \"react\";\nimport dynamic from \"next/dynamic\"; // utils\n\nimport { useMediaQuery } from \"../../utils/useMediaQuery\"; //componenets\n\nimport Window from \"../../components/window\";\nimport Icons from \"../../components/Icons\";\nimport PreferencesWindow from \"../../components/PreferencesWindow\";\nimport WebsitesWindow from \"../../components/websitesWindow\";\nimport Nav from \"../../components/nav\";\n\nvar Home = function Home() {\n  var constraintsRef = useRef(null);\n  var iconConstraints = useRef(null);\n\n  var _useState = useState(false),\n      canDrag = _useState[0],\n      setCanDrag = _useState[1];\n\n  useEffect(function () {\n    var mediaMatch = window.matchMedia(\"(min-width: 500px)\");\n    console.log(mediaMatch.matches);\n    setCanDrag(mediaMatch.matches);\n  });\n\n  var _useState2 = useState(\"green\"),\n      wallpaper = _useState2[0],\n      setWallpaper = _useState2[1];\n\n  var _useState3 = useState(false),\n      preferencesOpen = _useState3[0],\n      togglePreferencesOpen = _useState3[1];\n\n  var _useState4 = useState(false),\n      websitesOpen = _useState4[0],\n      toggleWebsitesOpen = _useState4[1];\n\n  var handleClickPreferences = function handleClickPreferences() {\n    togglePreferencesOpen(!preferencesOpen);\n\n    if (websitesOpen === true) {\n      console.log(\"websites is open\");\n      toggleWebsitesOpen(!websitesOpen);\n    }\n  };\n\n  var handleClickWebsites = function handleClickWebsites() {\n    toggleWebsitesOpen(!websitesOpen);\n  };\n\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(motion.div, {\n    ref: constraintsRef,\n    className: wallpaper === \"stars\" ? \"entire-display stars\" : wallpaper === \"blue\" ? \"entire-display blue\" : \"entire-display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), canDrag ? __jsx(motion.div, {\n    drag: true,\n    dragMomentum: false,\n    dragConstraints: {\n      left: -300,\n      top: -50,\n      bottom: 500,\n      right: 300\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Window, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })) : __jsx(Window, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), __jsx(PreferencesWindow, {\n    preferencesOpen: preferencesOpen,\n    handleClick: handleClickPreferences,\n    setWallpaper: setWallpaper,\n    wallpaper: wallpaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(WebsitesWindow, {\n    websitesOpen: websitesOpen,\n    handleClick: handleClickWebsites,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), __jsx(motion.div, {\n    className: \"icons-container\",\n    ref: iconConstraints,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Icons, {\n    togglePreferencesOpen: togglePreferencesOpen,\n    preferencesOpen: preferencesOpen,\n    toggleWebsitesOpen: toggleWebsitesOpen,\n    websitesOpen: websitesOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/thomasharbin/Documents/GitHub/portfolio-old-school/pages/home/index.js"],"names":["motion","useState","useRef","Fragment","useEffect","dynamic","useMediaQuery","Window","Icons","PreferencesWindow","WebsitesWindow","Nav","Home","constraintsRef","iconConstraints","canDrag","setCanDrag","mediaMatch","window","matchMedia","console","log","matches","wallpaper","setWallpaper","preferencesOpen","togglePreferencesOpen","websitesOpen","toggleWebsitesOpen","handleClickPreferences","handleClickWebsites","left","top","bottom","right"],"mappings":"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","sourcesContent":["import { motion } from \"framer-motion\";\nimport \"../home/styles.scss\";\nimport { useState, useRef, Fragment, useEffect } from \"react\";\nimport dynamic from \"next/dynamic\";\n\n// utils\nimport { useMediaQuery } from \"../../utils/useMediaQuery\";\n\n//componenets\nimport Window from \"../../components/window\";\nimport Icons from \"../../components/Icons\";\nimport PreferencesWindow from \"../../components/PreferencesWindow\";\nimport WebsitesWindow from \"../../components/websitesWindow\";\nimport Nav from \"../../components/nav\";\n\nconst Home = () => {\n  const constraintsRef = useRef(null);\n  const iconConstraints = useRef(null);\n\n  const [canDrag, setCanDrag] = useState(false);\n\n  useEffect(() => {\n    const mediaMatch = window.matchMedia(\"(min-width: 500px)\");\n    console.log(mediaMatch.matches);\n    setCanDrag(mediaMatch.matches);\n  });\n\n  const [wallpaper, setWallpaper] = useState(\"green\");\n  const [preferencesOpen, togglePreferencesOpen] = useState(false);\n  const [websitesOpen, toggleWebsitesOpen] = useState(false);\n\n  const handleClickPreferences = () => {\n    togglePreferencesOpen(!preferencesOpen);\n    if (websitesOpen === true) {\n      console.log(`websites is open`)\n      toggleWebsitesOpen(!websitesOpen);\n    } \n  };\n\n  const handleClickWebsites = () => {\n    toggleWebsitesOpen(!websitesOpen);\n  };\n\n  return (\n    <Fragment>\n      <motion.div\n        ref={constraintsRef}\n        className={\n          wallpaper === \"stars\"\n            ? \"entire-display stars\"\n            : wallpaper === \"blue\"\n            ? \"entire-display blue\"\n            : \"entire-display\"\n        }\n      >\n        <Nav />\n\n        {canDrag ? (\n          <motion.div\n            drag\n            dragMomentum={false}\n            dragConstraints={{\n              left: -300,\n              top: -50,\n              bottom: 500,\n              right: 300\n            }}\n          >\n            <Window />\n          </motion.div>\n        ) : (\n          <Window />\n        )}\n\n        <PreferencesWindow\n          preferencesOpen={preferencesOpen}\n          handleClick={handleClickPreferences}\n          setWallpaper={setWallpaper}\n          wallpaper={wallpaper}\n        />\n\n        <WebsitesWindow\n          websitesOpen={websitesOpen}\n          handleClick={handleClickWebsites}\n        />\n\n        <motion.div className=\"icons-container\" ref={iconConstraints}>\n          <Icons\n            togglePreferencesOpen={togglePreferencesOpen}\n            preferencesOpen={preferencesOpen}\n            toggleWebsitesOpen={toggleWebsitesOpen}\n            websitesOpen={websitesOpen}\n          />\n        </motion.div>\n      </motion.div>\n    </Fragment>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}