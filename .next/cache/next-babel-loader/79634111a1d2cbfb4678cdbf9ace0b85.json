{"ast":null,"code":"var _jsxFileName = \"/Users/thomasharbin/Documents/GitHub/portfolio-old-school/components/movies/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport plyr from \"plyr\"; // styles\n\nimport \"./styles.module.scss\"; // data\n\nimport { movies } from \"../../data\";\n\nvar Movies = function Movies() {\n  var _useState = useState(movies[0].url),\n      videoId = _useState[0],\n      setVideoId = _useState[1];\n\n  var _useState2 = useState(false),\n      modalOpen = _useState2[0],\n      setModalOpen = _useState2[1];\n\n  var updateVideoModal = function updateVideoModal() {\n    setVideoId(item.url);\n  };\n\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"videoplayer-container modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    \"class\": \"modal-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    \"class\": \"close-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"\\xD7\")), __jsx(\"div\", {\n    \"class\": \"plyr__video-embed modal-content\",\n    id: \"player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"iframe\", {\n    src: videoId,\n    allowfullscreen: true,\n    allowtransparency: true,\n    allow: \"autoplay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"single-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: \"singleItem-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, movies.map(function (item, i) {\n    return __jsx(\"li\", {\n      onClick: updateVideoModal,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: item.url,\n      target: \"_blank\",\n      className: \"singleItem-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, item.name));\n  }))));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/thomasharbin/Documents/GitHub/portfolio-old-school/components/movies/index.js"],"names":["useState","useEffect","Fragment","PropTypes","plyr","movies","Movies","url","videoId","setVideoId","modalOpen","setModalOpen","updateVideoModal","item","map","i","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,OAAO,sBAAP,C,CAEA;;AACA,SAASC,MAAT,QAAuB,YAAvB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,kBACWN,QAAQ,CAACK,MAAM,CAAC,CAAD,CAAN,CAAUE,GAAX,CADnB;AAAA,MACZC,OADY;AAAA,MACHC,UADG;;AAAA,mBAEeT,QAAQ,CAAC,KAAD,CAFvB;AAAA,MAEZU,SAFY;AAAA,MAEDC,YAFC;;AAInB,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BH,IAAAA,UAAU,CAACI,IAAI,CAACN,GAAN,CAAV;AACH,GAFD;;AAIA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,aAAM,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,aAAM,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAIE;AAAK,aAAM,iCAAX;AAA6C,IAAA,EAAE,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEC,OADP;AAEE,IAAA,eAAe,MAFjB;AAGE,IAAA,iBAAiB,MAHnB;AAIE,IAAA,KAAK,EAAC,UAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,EAcE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACS,GAAP,CAAW,UAACD,IAAD,EAAOE,CAAP,EAAa;AACvB,WACE;AACA,MAAA,OAAO,EAAEH,gBADT;AAEA,MAAA,GAAG,EAAEG,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAG,MAAA,IAAI,EAAEF,IAAI,CAACN,GAAd;AAAmB,MAAA,MAAM,EAAC,QAA1B;AAAmC,MAAA,SAAS,EAAC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,IAAI,CAACG,IADR,CAHF,CADF;AASD,GAVA,CADH,CADF,CAdF,CADF;AAgCD,CAxCD;;AA0CA,eAAeV,MAAf","sourcesContent":["import { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport plyr from \"plyr\";\n\n// styles\nimport \"./styles.module.scss\";\n\n// data\nimport { movies } from \"../../data\";\n\nconst Movies = () => {\n  const [videoId, setVideoId] = useState(movies[0].url);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const updateVideoModal = () => {\n      setVideoId(item.url)\n  }\n\n  return (\n    <Fragment>\n      <div className=\"videoplayer-container modal\">\n        <div class=\"modal-header\">\n          <span class=\"close-btn\">&times;</span>\n        </div>\n        <div class=\"plyr__video-embed modal-content\" id=\"player\">\n          <iframe\n            src={videoId}\n            allowfullscreen\n            allowtransparency\n            allow=\"autoplay\"\n          ></iframe>\n        </div>\n      </div>\n      <div className=\"single-item\">\n        <ul className=\"singleItem-list\">\n          {movies.map((item, i) => {\n            return (\n              <li \n              onClick={updateVideoModal} \n              key={i} >\n                <a href={item.url} target=\"_blank\" className=\"singleItem-link\">\n                  {item.name}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}