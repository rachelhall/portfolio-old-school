{"ast":null,"code":"var _jsxFileName = \"/Users/thomasharbin/Documents/GitHub/portfolio-old-school/components/movies/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport plyr from \"plyr\"; // styles\n\nimport \"./styles.module.scss\"; // data\n\nimport { movies } from \"../../data\";\n\nvar Movies = function Movies() {\n  var _useState = useState(movies[0].id),\n      videoId = _useState[0],\n      setVideoId = _useState[1];\n\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"videoplayer-container modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    \"class\": \"plyr__video-embed\",\n    id: \"player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"iframe\", {\n    src: movies[0].url,\n    allowfullscreen: true,\n    allowtransparency: true,\n    allow: \"autoplay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"single-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: \"singleItem-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, movies.map(function (item) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: item.url,\n      target: \"_blank\",\n      className: \"singleItem-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, item.name));\n  }))));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/Users/thomasharbin/Documents/GitHub/portfolio-old-school/components/movies/index.js"],"names":["useState","useEffect","Fragment","PropTypes","plyr","movies","Movies","id","videoId","setVideoId","url","map","item","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,OAAO,sBAAP,C,CAEA;;AACA,SAASC,MAAT,QAAuB,YAAvB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,kBACWN,QAAQ,CAACK,MAAM,CAAC,CAAD,CAAN,CAAUE,EAAX,CADnB;AAAA,MACZC,OADY;AAAA,MACHC,UADG;;AAGnB,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,aAAM,mBAAX;AAA+B,IAAA,EAAE,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEJ,MAAM,CAAC,CAAD,CAAN,CAAUK,GADjB;AAEE,IAAA,eAAe,MAFjB;AAGE,IAAA,iBAAiB,MAHnB;AAIE,IAAA,KAAK,EAAC,UAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MAAM,CAACM,GAAP,CAAW,UAAAC,IAAI,EAAI;AAClB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAEA,IAAI,CAACF,GAAd;AAAmB,MAAA,MAAM,EAAC,QAA1B;AAAmC,MAAA,SAAS,EAAC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,IAAI,CAACC,IADR,CADF,CADF;AAOD,GARA,CADH,CADF,CAXF,CADF;AA2BD,CA9BD;;AAgCA,eAAeP,MAAf","sourcesContent":["import { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport plyr from \"plyr\";\n\n// styles\nimport \"./styles.module.scss\";\n\n// data\nimport { movies } from \"../../data\";\n\nconst Movies = () => {\n  const [videoId, setVideoId] = useState(movies[0].id);\n\n  return (\n    <Fragment>\n      <div className=\"videoplayer-container modal\">\n        <div class=\"plyr__video-embed\" id=\"player\">\n          <iframe\n            src={movies[0].url}\n            allowfullscreen\n            allowtransparency\n            allow=\"autoplay\"\n          ></iframe>\n        </div>\n      </div>\n      <div className=\"single-item\">\n        <ul className=\"singleItem-list\">\n          {movies.map(item => {\n            return (\n              <li>\n                <a href={item.url} target=\"_blank\" className=\"singleItem-link\">\n                  {item.name}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}