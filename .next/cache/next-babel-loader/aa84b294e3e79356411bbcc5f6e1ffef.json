{"ast":null,"code":"var _jsxFileName = \"/Users/thomasharbin/Documents/GitHub/portfolio-old-school/pages/home/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport \"../home/styles.scss\"; //componenets\n\nimport Window from \"..//../components/window\";\n\nvar Home = function Home() {\n  var Draggable = React.createClass({\n    displayName: \"Draggable\",\n    getDefaultProps: function getDefaultProps() {\n      return {\n        // allow the initial position to be passed in as a prop\n        initialPos: {\n          x: 0,\n          y: 0\n        }\n      };\n    },\n    getInitialState: function getInitialState() {\n      return {\n        pos: this.props.initialPos,\n        dragging: false,\n        rel: null // position relative to the cursor\n\n      };\n    },\n    // we could get away with not having this (and just having the listeners on\n    // our div), but then the experience would be possibly be janky. If there's\n    // anything w/ a higher z-index that gets in the way, then you're toast,\n    // etc.\n    componentDidUpdate: function componentDidUpdate(props, state) {\n      if (this.state.dragging && !state.dragging) {\n        document.addEventListener('mousemove', this.onMouseMove);\n        document.addEventListener('mouseup', this.onMouseUp);\n      } else if (!this.state.dragging && state.dragging) {\n        document.removeEventListener('mousemove', this.onMouseMove);\n        document.removeEventListener('mouseup', this.onMouseUp);\n      }\n    },\n    // calculate relative position to the mouse and set dragging=true\n    onMouseDown: function onMouseDown(e) {\n      // only left mouse button\n      if (e.button !== 0) return;\n      var pos = $(this.getDOMNode()).offset();\n      this.setState({\n        dragging: true,\n        rel: {\n          x: e.pageX - pos.left,\n          y: e.pageY - pos.top\n        }\n      });\n      e.stopPropagation();\n      e.preventDefault();\n    },\n    onMouseUp: function onMouseUp(e) {\n      this.setState({\n        dragging: false\n      });\n      e.stopPropagation();\n      e.preventDefault();\n    },\n    onMouseMove: function onMouseMove(e) {\n      if (!this.state.dragging) return;\n      this.setState({\n        pos: {\n          x: e.pageX - this.state.rel.x,\n          y: e.pageY - this.state.rel.y\n        }\n      });\n      e.stopPropagation();\n      e.preventDefault();\n    },\n    render: function render() {\n      // transferPropsTo will merge style & other props passed into our\n      // component to also be on the child DIV.\n      return this.transferPropsTo(React.DOM.div({\n        onMouseDown: this.onMouseDown,\n        style: {\n          position: 'absolute',\n          left: this.state.pos.x + 'px',\n          top: this.state.pos.y + 'px'\n        }\n      }, this.props.children));\n    }\n  });\n  React.renderComponent(Draggable({\n    initialPos: {\n      x: 100,\n      y: 200\n    },\n    className: 'my-draggable',\n    style: {\n      border: '2px solid #aa5',\n      padding: '10px'\n    }\n  }, 'Drag Me! See how children are passed through to the div!'), document.body);\n  return __jsx(\"div\", {\n    className: \"entire-display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(Window, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/thomasharbin/Documents/GitHub/portfolio-old-school/pages/home/index.js"],"names":["Window","Home","Draggable","React","createClass","getDefaultProps","initialPos","x","y","getInitialState","pos","props","dragging","rel","componentDidUpdate","state","document","addEventListener","onMouseMove","onMouseUp","removeEventListener","onMouseDown","e","button","$","getDOMNode","offset","setState","pageX","left","pageY","top","stopPropagation","preventDefault","render","transferPropsTo","DOM","div","style","position","children","renderComponent","className","border","padding","body"],"mappings":"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","sourcesContent":["\n\nimport \"../home/styles.scss\"\n\n//componenets\nimport Window from \"..//../components/window\"\n\nconst Home = () => {\n    const Draggable = React.createClass({\n        getDefaultProps: function () {\n          return {\n            // allow the initial position to be passed in as a prop\n            initialPos: {x: 0, y: 0}\n          }\n        },\n        getInitialState: function () {\n          return {\n            pos: this.props.initialPos,\n            dragging: false,\n            rel: null // position relative to the cursor\n          }\n        },\n        // we could get away with not having this (and just having the listeners on\n        // our div), but then the experience would be possibly be janky. If there's\n        // anything w/ a higher z-index that gets in the way, then you're toast,\n        // etc.\n        componentDidUpdate: function (props, state) {\n          if (this.state.dragging && !state.dragging) {\n            document.addEventListener('mousemove', this.onMouseMove)\n            document.addEventListener('mouseup', this.onMouseUp)\n          } else if (!this.state.dragging && state.dragging) {\n            document.removeEventListener('mousemove', this.onMouseMove)\n            document.removeEventListener('mouseup', this.onMouseUp)\n          }\n        },\n      \n        // calculate relative position to the mouse and set dragging=true\n        onMouseDown: function (e) {\n          // only left mouse button\n          if (e.button !== 0) return\n          const pos = $(this.getDOMNode()).offset()\n          this.setState({\n            dragging: true,\n            rel: {\n              x: e.pageX - pos.left,\n              y: e.pageY - pos.top\n            }\n          })\n          e.stopPropagation()\n          e.preventDefault()\n        },\n        onMouseUp: function (e) {\n          this.setState({dragging: false})\n          e.stopPropagation()\n          e.preventDefault()\n        },\n        onMouseMove: function (e) {\n          if (!this.state.dragging) return\n          this.setState({\n            pos: {\n              x: e.pageX - this.state.rel.x,\n              y: e.pageY - this.state.rel.y\n            }\n          })\n          e.stopPropagation()\n          e.preventDefault()\n        },\n        render: function () {\n          // transferPropsTo will merge style & other props passed into our\n          // component to also be on the child DIV.\n          return this.transferPropsTo(React.DOM.div({\n            onMouseDown: this.onMouseDown,\n            style: {\n              position: 'absolute',\n              left: this.state.pos.x + 'px',\n              top: this.state.pos.y + 'px'\n            }\n          }, this.props.children))\n        }\n      })\n      \n      React.renderComponent(Draggable({\n          initialPos: {x: 100, y: 200},\n          className: 'my-draggable',\n          style: {\n              border: '2px solid #aa5',\n              padding: '10px'\n          }\n      }, 'Drag Me! See how children are passed through to the div!'), document.body)\n    return (\n        <div className=\"entire-display\">\n            <Window />\n\n        </div>\n    )\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}